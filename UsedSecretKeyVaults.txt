# Azure Key Vaults with DB connection string secrets

## Secrets naming conventions
	+ This application implement the interface to load secret values based on a prefix value you provide at app startup. This technique allows us to load secrets based on the version of the app.
	-> All secrets must contain the app version as a prefix:	1000-secretname or 1001-secretname2
																-> 1000-secretname is used if the program version is 1.0.0.0
																-> 1001-secretname is used if the program version is 1.0.0.1
	
## Load app configuration values from Azure Key Vault secrets in production/stage/dockerdevelopment environment
	-Note: When the sample app runs on the local machine in the Development environment, secrets are loaded from the local user secrets store.
	
	In production environment the app managed identity allows the app to authenticate with Azure Key Vault using Azure AD authentication without
	storing credentials in the app's code or configuration.

	There are two secret vaults for e3 projectmanager deployments available:

		a) E3PM-StageSecrets -> for staging env (hoisting DB connection strings for docker swarm with sql server in container)
	    b) E3PM-ProdSecrets -> for production env (hoisting DB connection strings for azure sql server database)
	
	Set permission for list and get secrets:
	Using Azure CLI and the app's Object ID, provide the app with list and get permissions to access the key vault:
	az keyvault set-policy --name {KEY VAULT NAME} --object-id {OBJECT ID} --secret-permissions get list
	-> Creating a secret in a key vault is easy to do in azure web portal.
	
	e.g: 




